const TokenCounter = require('./token-counter');

/**
 * –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø TOKEN COUNTER
 *
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TokenCounter
 * –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ API
 */

// ============================================================
// –ü–†–ò–ú–ï–† 1: –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
// ============================================================
console.log('=== –ü–†–ò–ú–ï–† 1: –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ===\n');

const counter = new TokenCounter();

// –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
counter.trackRequest({
  inputTokens: 150,
  outputTokens: 300,
  model: 'gpt-4',
  requestDescription: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'
});

// ============================================================
// –ü–†–ò–ú–ï–† 2: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
// ============================================================
console.log('\n=== –ü–†–ò–ú–ï–† 2: –ù–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤ ===\n');

// –ó–∞–ø—Ä–æ—Å 1
counter.trackRequest({
  inputTokens: 200,
  outputTokens: 450,
  model: 'claude-sonnet-4-5',
  requestDescription: '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–¥–∞'
});

// –ó–∞–ø—Ä–æ—Å 2
counter.trackRequest({
  inputTokens: 100,
  outputTokens: 250,
  model: 'gpt-3.5-turbo',
  requestDescription: '–ë—ã—Å—Ç—Ä—ã–π –≤–æ–ø—Ä–æ—Å –æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ'
});

// –ó–∞–ø—Ä–æ—Å 3
counter.trackRequest({
  inputTokens: 500,
  outputTokens: 800,
  model: 'claude-3-opus',
  requestDescription: '–°–ª–æ–∂–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã'
});

// ============================================================
// –ü–†–ò–ú–ï–† 3: –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–µ—Å—Å–∏–∏
// ============================================================
console.log('\n=== –ü–†–ò–ú–ï–† 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏ ===\n');

// –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
counter.displaySessionStats();

// ============================================================
// –ü–†–ò–ú–ï–† 4: –¢–æ–ø —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
// ============================================================
console.log('\n=== –ü–†–ò–ú–ï–† 4: –°–∞–º—ã–µ –¥–æ—Ä–æ–≥–∏–µ –∑–∞–ø—Ä–æ—Å—ã ===\n');

const topExpensive = counter.getTopExpensiveRequests(3);
console.log('üîù –¢–û–ü-3 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:\n');

topExpensive.forEach((req, index) => {
  console.log(`${index + 1}. ${req.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}`);
  console.log(`   –ú–æ–¥–µ–ª—å: ${req.model}`);
  console.log(`   –¢–æ–∫–µ–Ω—ã: ${req.totalTokens.toLocaleString()}`);
  console.log(`   –°—Ç–æ–∏–º–æ—Å—Ç—å: $${req.totalCost.toFixed(6)}\n`);
});

// ============================================================
// –ü–†–ò–ú–ï–† 5: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏
// ============================================================
console.log('\n=== –ü–†–ò–ú–ï–† 5: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ ===\n');

// –≠—Ç–æ –ø–æ–∫–∞–∂–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Å—Å–∏–∏, —Å–æ—Ö—Ä–∞–Ω–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –∏ –ø–æ–∫–∞–∂–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
counter.endSession();

// ============================================================
// –ü–†–ò–ú–ï–† 6: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ —Ü–µ–Ω–∞–º–∏
// ============================================================
console.log('\n\n=== –ü–†–ò–ú–ï–† 6: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ü–µ–Ω—ã ===\n');

const customCounter = new TokenCounter({
  historyFile: './custom-token-history.json',
  pricing: {
    'my-custom-model': { input: 0.005, output: 0.010 },
    'another-model': { input: 0.002, output: 0.008 }
  }
});

customCounter.trackRequest({
  inputTokens: 300,
  outputTokens: 600,
  model: 'my-custom-model',
  requestDescription: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –º–æ–¥–µ–ª–∏'
});

customCounter.displaySessionStats();

// ============================================================
// –ü–†–ò–ú–ï–† 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º API (–ø—Å–µ–≤–¥–æ–∫–æ–¥)
// ============================================================
console.log('\n\n=== –ü–†–ò–ú–ï–† 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API (–ø—Å–µ–≤–¥–æ–∫–æ–¥) ===\n');

// –ü—Ä–∏–º–µ—Ä –∫–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º API –≤—ã–∑–æ–≤–æ–º
async function makeAPICallWithTracking(prompt, model = 'gpt-4') {
  const apiCounter = new TokenCounter();

  try {
    // –ó–¥–µ—Å—å –±—ã–ª –±—ã –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤
    // const response = await fetch('https://api.openai.com/v1/chat/completions', {...});
    // const data = await response.json();

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç API
    const mockResponse = {
      usage: {
        prompt_tokens: 250,
        completion_tokens: 500,
        total_tokens: 750
      },
      choices: [{
        message: {
          content: '–≠—Ç–æ –±—ã–ª –±—ã –æ—Ç–≤–µ—Ç –æ—Ç API...'
        }
      }]
    };

    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
    apiCounter.trackRequest({
      inputTokens: mockResponse.usage.prompt_tokens,
      outputTokens: mockResponse.usage.completion_tokens,
      model: model,
      requestDescription: prompt
    });

    return mockResponse.choices[0].message.content;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ API:', error);
    throw error;
  } finally {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∫–æ–Ω—Ü–µ
    apiCounter.endSession();
  }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
console.log('–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å API:');
console.log('const result = await makeAPICallWithTracking("–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏", "gpt-4");');

// ============================================================
// –ü–†–ò–ú–ï–† 8: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Å—á–µ—Ç –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
// ============================================================
console.log('\n\n=== –ü–†–ò–ú–ï–† 8: –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ ===\n');

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫
const globalCounter = new TokenCounter();

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
process.on('exit', () => {
  console.log('\nüîö –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...\n');
  globalCounter.saveHistory();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C
process.on('SIGINT', () => {
  console.log('\n\n‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è...\n');
  globalCounter.endSession();
  process.exit(0);
});

console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ');
console.log('   –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã\n');

// –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤
globalCounter.trackRequest({
  inputTokens: 180,
  outputTokens: 320,
  model: 'gpt-4-turbo',
  requestDescription: '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º'
});
